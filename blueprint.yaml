id: particle/asset-ota
category: tutorial
icon: particle.png
gitrepo: https://github.com/particle-iot/asset-ota-examples
name: "Asset OTA examples"
shortDescription: "Examples of using Asset OTA for programming external coprocessors and peripherals"
version: 1.0.2
models: []
language: [ "Particle Wiring" ]
hardwareDependencies:
  - name: Particle MCU Development Board
    link: https://store.particle.io/collections/all-products?filter.p.product_type=Development%20Boards
    tags: [ "Boron", "Argon", "M-SoM", "Photon 2", "Muon", "Monitor One", "Tracker One", "T-SoM", "E-SoM", "P2" ]
  - name: STM32 Development board
cloudServices: []
integrations: []
description: |
  Asset OTA enables Particle devices to bundle external assets, like firmware binaries or graphical resources, into an over-the-air update, which can then be delivered to connected components. This functionality, available in Device OS 5.5.0 and later, supports assets up to 1 MB to 1.5 MB and does not consume additional data operations.

  Example applications of Asset OTA include updating coprocessors and peripherals. For instance, in the STM32 OTA example, a Particle device updates an STM32 coprocessor with a new firmware binary received over the air. In the LCD image example, resources like images are bundled and delivered to display components, ensuring all assets are available before the application starts.

  Asset OTA is useful for applications requiring regular updates to connected components, such as external displays or auxiliary processors, providing a unified OTA solution for Particle-based products.
